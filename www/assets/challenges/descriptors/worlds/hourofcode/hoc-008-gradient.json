{
    "id": "hoc-008-gradient",
    "title": "8-bit sunset",
    "description": "Use a loop to draw an 8-bit sunset.",
    "startAt": 2,
    "steps": [
        {
            "hint": "We’ll just use solid shapes with no stroke. So **type** `stroke 0`.",
            "solution": "stroke 0"
        },
        {
            "hint": "To better see the effect of our test, text to bold with `bold true`",
            "solution": "bold true"
        },
        {
            "hint": "We’ll use a loop to draw the sunset. This time going from 0 to 10. **Type** `for y in [ 0 .. 10 ]`",
            "solution": "for y in [ 0 .. 10 ]"
        },
        {
            "hint": "To understand how this loop works, we’ll draw the loop value out. Move into position with `moveTo 250, y * 50`",
            "solution": "    moveTo 250, y * 50",
            "validate": "    moveTo 250, y \\* 50"
        },
        {
            "hint": "Let’s inspect what our loop is doing. You can use the text function with plain text, but you can also pass it a variable. **Type** `text y` to see what the y values are across the screen.",
            "solution": "    text y",
            "validate": "    text y"
        },
        {
            "hint": "The y variable is increasing every time we go through the loop. It goes from 0 (which is off the screen) to 10. To draw our sunset we need to just move to the left edge. **Type** `moveTo 0, y * 50`",
            "solution": "    moveTo 0, y * 50",
            "validate": "    moveTo 0, y \\* 50"
        },
        {
            "hint": "We’ll use a special function to darken the color every loop. **Type** `color darken blue, y * 3`.",
            "solution": "    color darken blue, y * 3",
            "validate": "    color darken blue, y \\* 3"
        },
        {
            "hint": "Now for the sky, this will draw over your numbers. **Type** `rectangle 500, 50`.",
            "solution": "    rectangle 500, 50",
            "validate": "    rectangle 500, 50"
        }
    ],
    "completion_text": "Beautiful! See how the blue gets darker as it goes down the screen. The y variable was being passed to the darken function. As the y value increased, the darken function made the blue color get darker.",
    "cover": "hoc-008-gradient.png",
    "index": 8,
    "hasNext": true
}